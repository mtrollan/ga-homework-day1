#projecteuler.net
#Answers to problems 1, 2, and 5


# Problem 1
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.
sum = 0
(1..999).each do |number|
	if (number % 3 == 0)
		sum = sum + number
	elsif (number % 5 == 0)
		sum = sum + number
	end
end
puts "Answer to problem 1: #{sum}"



# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#  1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
firstNum = 1
secondNum = 2
thirdNum = 0
sum2 = 2 #start at 2 to account for "1" and "2" being part of the fibonacci series

while thirdNum < 4000000 do
	thirdNum = firstNum + secondNum
	if (thirdNum % 2 == 0)
		sum2 = sum2 + thirdNum
	end
	firstNum = secondNum
	secondNum = thirdNum
end
puts "Answer to problem 2: #{sum2}"



# Problem 5
# 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
# What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
number = 1
puts "calculating..." # to inform the user that this will take a couple minutes
until ((number % 1 == 0) && (number % 2 == 0) && (number % 3 == 0) && (number % 4 == 0) && (number % 5 == 0) && (number % 6 == 0) && (number % 7 == 0) && (number % 8 == 0) && (number % 9 == 0) && (number % 10 == 0) && (number % 11 == 0) && (number % 12 == 0) && (number % 13 == 0) && (number % 14 == 0) && (number % 15 == 0) && (number % 16 == 0) && (number % 17 == 0) && (number % 18 == 0) && (number % 19 == 0) && (number % 20 == 0)) do
	number = number + 1
end
puts "Answer to problem 5: #{number}"